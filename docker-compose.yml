version: '3'

networks:
  web:
    external: true 
  internal:
    external: false

services:
  backend:
    build: backend
    ports:
    - 8081:8081
    networks:
    - internal
    volumes:
    - ./js-backend:/backend
    - /nfs/geluid:/geluid
    restart: on-failure
    #entrypoint: [ "/bin/sh", "-c", "sleep 2073600" ]

  frontend:
    build: frontend
    ports:
    - 8080:8080
    networks:
    - internal
    volumes:
    - ./frontend:/frontend

  proxy:
    image: nginx
    volumes:
    - ./proxy/nginx.conf:/etc/nginx/nginx.conf
    networks:
    - web
    - internal
    #ports:
    #- 80:80
    links:
    - backend:backend
    - frontend:frontend
    labels:
    - "traefik.enable=true"
    - "traefik.docker.network=web"
    - "traefik.http.routers.geluid.entrypoints=http"
    - "traefik.http.routers.geluid.rule=Host(`geluid.rink.nu`)"
    - "traefik.http.routers.geluid.middlewares=geluid-https-redirect"
    - "traefik.http.middlewares.geluid-https-redirect.redirectscheme.scheme=https"
    - "traefik.http.routers.geluid-secure.entrypoints=https"
    - "traefik.http.routers.geluid-secure.rule=Host(`geluid.rink.nu`)"
    - "traefik.http.routers.geluid-secure.tls=true"
    - "traefik.http.routers.geluid-secure.tls.certresolver=letsencrypt"
    - "traefik.http.routers.geluid-secure.service=geluid"
    - "traefik.http.routers.geluid-secure.middlewares=geluid-auth"
    - "traefik.http.middlewares.geluid-auth.basicauth.users=..."
    - "traefik.http.services.geluid.loadbalancer.server.port=80"
